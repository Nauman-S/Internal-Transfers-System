version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: transfers_app
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: transfers_db
      DB_USER: postgres
      DB_PASSWORD: password
      DB_SSL_MODE: disable
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - transfers_network

  postgres:
    image: postgres:18.0
    container_name: transfers_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: transfers_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d transfers_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - transfers_network


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: transfers_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./migrations/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - transfers_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  transfers_network:
    driver: bridge
